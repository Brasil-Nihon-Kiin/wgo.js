import Component from './Component';
import { SVGBoard } from '../../SVGBoard';
import { FieldObject, BoardObject, BoardViewport } from '../../BoardBase';
import { Point } from '../../types';
import SimplePlayer from '../SimplePlayer';
import { SVGBoardObject } from '../../SVGBoard/types';
import BoardComponent from './BoardComponent';
export default class SVGBoardComponent extends Component implements BoardComponent {
    board: SVGBoard;
    boardElement: HTMLElement;
    stoneBoardsObjects: FieldObject[];
    temporaryBoardObjects: SVGBoardObject[];
    viewportStack: BoardViewport[];
    boardMouseX: number;
    boardMouseY: number;
    constructor(player: SimplePlayer);
    create(): HTMLElement;
    destroy(): void;
    protected updateStones(): void;
    protected addVariationMarkup(): void;
    protected clearTemporaryBoardObjects(): void;
    protected handleBoardClick(point: Point): void;
    protected handleBoardMouseMove(point: Point): void;
    protected handleBoardMouseOut(): void;
    private handleVariationCursor;
    private removeVariationCursor;
    private applyNodeChanges;
    private clearNodeChanges;
    private applyMarkupProperty;
    private applyLabelMarkupProperty;
    private applyLineMarkupProperty;
    private applyViewportProperty;
    private clearViewportProperty;
    private applyMoveProperty;
    addTemporaryBoardObject(obj: BoardObject): void;
    removeTemporaryBoardObject(obj: FieldObject): void;
}
